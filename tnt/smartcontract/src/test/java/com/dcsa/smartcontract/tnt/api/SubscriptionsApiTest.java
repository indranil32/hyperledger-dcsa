/*
 * DCSA OpenAPI specification for Track & Trace
 * API specification issued by DCSA.org
 *
 * OpenAPI spec version: 2.0.1
 * Contact: info@dcsa.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.dcsa.smartcontract.tnt.api;

import com.dcsa.smartcontract.tnt.ApiException;
import com.dcsa.tnt.common.EventSubscription;
import com.dcsa.tnt.common.EventSubscriptionBody;
import com.dcsa.tnt.common.SubscriptionID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for SubscriptionsApi
 */
@Ignore
public class SubscriptionsApiTest {

    private final SubscriptionsApi api = new SubscriptionsApi();

    /**
     * Receive a list of your active event subscriptions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventSubscriptionsGetTest() throws ApiException {
        List<EventSubscription> response = api.eventSubscriptionsGet();

        // TODO: test validations
    }
    /**
     * Create an event subscription
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventSubscriptionsPostTest() throws ApiException {
        EventSubscriptionBody body = null;
        EventSubscription response = api.eventSubscriptionsPost(body);

        // TODO: test validations
    }
    /**
     * Stop an event subscription, using the subscription ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventSubscriptionsSubscriptionIDDeleteTest() throws ApiException {
        SubscriptionID subscriptionID = null;
        api.eventSubscriptionsSubscriptionIDDelete(subscriptionID);

        // TODO: test validations
    }
    /**
     * Find event subscription by subscription ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventSubscriptionsSubscriptionIDGetTest() throws ApiException {
        SubscriptionID subscriptionID = null;
        EventSubscription response = api.eventSubscriptionsSubscriptionIDGet(subscriptionID);

        // TODO: test validations
    }
    /**
     * Alter an event subscription
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eventSubscriptionsSubscriptionIDPutTest() throws ApiException {
        EventSubscription body = null;
        SubscriptionID subscriptionID = null;
        EventSubscription response = api.eventSubscriptionsSubscriptionIDPut(body, subscriptionID);

        // TODO: test validations
    }
}
