/*
 * DCSA OpenAPI specification for Track & Trace
 * API specification issued by DCSA.org
 *
 * OpenAPI spec version: 2.0.1
 * Contact: info@dcsa.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.dcsa.tnt.common;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.UUID;
/**
 * The carrier issues a unique ID to the shipper or consignee for that subscription
 */
@Schema(description = "The carrier issues a unique ID to the shipper or consignee for that subscription")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-22T05:06:30.605Z[GMT]")
public class SubscriptionID {
  @SerializedName("subscriptionID")
  private UUID subscriptionID = null;

  public SubscriptionID subscriptionID(UUID subscriptionID) {
    this.subscriptionID = subscriptionID;
    return this;
  }

   /**
   * Get subscriptionID
   * @return subscriptionID
  **/
  @Schema(example = "123e4567-e89b-12d3-a456-426614174000", description = "")
  public UUID getSubscriptionID() {
    return subscriptionID;
  }

  public void setSubscriptionID(UUID subscriptionID) {
    this.subscriptionID = subscriptionID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionID subscriptionID = (SubscriptionID) o;
    return Objects.equals(this.subscriptionID, subscriptionID.subscriptionID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subscriptionID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionID {\n");
    
    sb.append("    subscriptionID: ").append(toIndentedString(subscriptionID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
