/*
 * DCSA OpenAPI specification for Track & Trace
 * API specification issued by DCSA.org
 *
 * OpenAPI spec version: 2.0.1
 * Contact: info@dcsa.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.dcsa.tnt.common;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Error
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-22T05:06:30.605Z[GMT]")
public class Error {
  @SerializedName("httpMethod")
  private String httpMethod = null;

  @SerializedName("requestUri")
  private String requestUri = null;

  @SerializedName("errors")
  private Errors errors = null;

  @SerializedName("statusCode")
  private Integer statusCode = null;

  @SerializedName("statusCodeText")
  private String statusCodeText = null;

  @SerializedName("errorDateTime")
  private String errorDateTime = null;

  public Error httpMethod(String httpMethod) {
    this.httpMethod = httpMethod;
    return this;
  }

   /**
   * The HTTP request method type
   * @return httpMethod
  **/
  @Schema(example = "POST", required = true, description = "The HTTP request method type")
  public String getHttpMethod() {
    return httpMethod;
  }

  public void setHttpMethod(String httpMethod) {
    this.httpMethod = httpMethod;
  }

  public Error requestUri(String requestUri) {
    this.requestUri = requestUri;
    return this;
  }

   /**
   * The request URI.
   * @return requestUri
  **/
  @Schema(example = "https://dcsa.org/dcsa/tnt/v1/events", required = true, description = "The request URI.")
  public String getRequestUri() {
    return requestUri;
  }

  public void setRequestUri(String requestUri) {
    this.requestUri = requestUri;
  }

  public Error errors(Errors errors) {
    this.errors = errors;
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @Schema(required = true, description = "")
  public Errors getErrors() {
    return errors;
  }

  public void setErrors(Errors errors) {
    this.errors = errors;
  }

  public Error statusCode(Integer statusCode) {
    this.statusCode = statusCode;
    return this;
  }

   /**
   * The HTTP status code
   * @return statusCode
  **/
  @Schema(example = "400", required = true, description = "The HTTP status code")
  public Integer getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(Integer statusCode) {
    this.statusCode = statusCode;
  }

  public Error statusCodeText(String statusCodeText) {
    this.statusCodeText = statusCodeText;
    return this;
  }

   /**
   * The textual representation of the response status.
   * @return statusCodeText
  **/
  @Schema(example = "Bad Request", required = true, description = "The textual representation of the response status.")
  public String getStatusCodeText() {
    return statusCodeText;
  }

  public void setStatusCodeText(String statusCodeText) {
    this.statusCodeText = statusCodeText;
  }

  public Error errorDateTime(String errorDateTime) {
    this.errorDateTime = errorDateTime;
    return this;
  }

   /**
   * The date and time (in ISO 8601 format) the error occurred.
   * @return errorDateTime
  **/
  @Schema(example = "2019-11-12T07:41:00+08:30", required = true, description = "The date and time (in ISO 8601 format) the error occurred.")
  public String getErrorDateTime() {
    return errorDateTime;
  }

  public void setErrorDateTime(String errorDateTime) {
    this.errorDateTime = errorDateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Error error = (Error) o;
    return Objects.equals(this.httpMethod, error.httpMethod) &&
        Objects.equals(this.requestUri, error.requestUri) &&
        Objects.equals(this.errors, error.errors) &&
        Objects.equals(this.statusCode, error.statusCode) &&
        Objects.equals(this.statusCodeText, error.statusCodeText) &&
        Objects.equals(this.errorDateTime, error.errorDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(httpMethod, requestUri, errors, statusCode, statusCodeText, errorDateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Error {\n");
    
    sb.append("    httpMethod: ").append(toIndentedString(httpMethod)).append("\n");
    sb.append("    requestUri: ").append(toIndentedString(requestUri)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    statusCodeText: ").append(toIndentedString(statusCodeText)).append("\n");
    sb.append("    errorDateTime: ").append(toIndentedString(errorDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
